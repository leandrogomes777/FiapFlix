// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSCServiceReceive.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200911010925_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSCServiceReceive.Models.ServiceRequest", b =>
                {
                    b.Property<long>("ServiceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechnicalProblemsId")
                        .HasColumnType("bigint");

                    b.HasKey("ServiceRequestId");

                    b.HasIndex("TechnicalProblemsId");

                    b.ToTable("ServiceRequest");
                });

            modelBuilder.Entity("CSCServiceReceive.Models.TechnicalProblems", b =>
                {
                    b.Property<long>("TechnicalProblemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicalProblemsId");

                    b.ToTable("TechnicalProblems");
                });

            modelBuilder.Entity("CSCServiceReceive.Models.ServiceRequest", b =>
                {
                    b.HasOne("CSCServiceReceive.Models.TechnicalProblems", "TechnicalProblem")
                        .WithMany()
                        .HasForeignKey("TechnicalProblemsId");
                });
#pragma warning restore 612, 618
        }
    }
}
